/* * Build Something 1: Parallax Scrolling * Justin McCandless */var ScrollyCanvas = (function() {    ScrollyCanvas.prototype.canvas = null;    ScrollyCanvas.prototype.ctx = null;    // Constructor, takes a selector for the canvas to use    function ScrollyCanvas(selector) {        // Setup the canvas        this.canvas = $(selector).get(0)        this.canvasInit();        // Set the scroll event        var me = this;        $(window).on("scroll", function() {            me.render();        });        // Set the window resize event        $(window).on("resize", function() {            me.canvasInit();            me.render();        });        this.render();    }    // Render    ScrollyCanvas.prototype.render = function() {        // A value of the scroll position proportional to the amount of the canvas visible        // 0 = first bit of canvas becoming visible, 0.5 = fully visible centered, 1 = just passing the canvas        var pos = (($("html").scrollTop() + $(window).height()) - $(this.canvas).position().top) / (2 * $(window).height());        // Set up the background image        var imgBG = new Image();        var me = this;        imgBG.onload = function() {            me.ctx.drawImage(imgBG, 0, 0, me.canvas.width, me.canvas.height);        }        imgBG.src = "images/bg.png";        // If scrolled before/after the canvas, don't render these at all (offscreen)        if ((pos >= 0) && (pos <= 2)) {            // Set up the ship image            var imgShip = new Image();            imgShip.onload = function() {                var width = me.canvas.height / 4;                var height = me.canvas.height / 4;                var x = 0;                var y = 0;                // Travelling along normally...                if (pos < .25) {                    y = me.canvas.height / 6;                    x = pos * me.canvas.width;                }                // OMG asteroid, evade!                else if (pos < .5) {                    y = me.canvas.height / 6 + (pos - .25) * me.canvas.height;                    x = pos * me.canvas.width;                }                // Carry on                else {                    y = me.canvas.height / 6 + .25 * me.canvas.height;                    x = pos * me.canvas.width;                }                me.ctx.drawImage(imgShip, x, y, width, height);            }            imgShip.src = "images/ship.png";            // Set up the asteroid image            var imgRock = new Image();            imgRock.onload = function() {                var width = me.canvas.height / 4;                var height = me.canvas.height / 4;                // On track for collision with the ship at this pos                var posCollision = .4;                var x = (-1 * me.canvas.width * (pos - 16.4)) / 41;                var y = ((me.canvas.height / 6 + 3 * height) / posCollision) * pos - 3 * height;                me.ctx.drawImage(imgRock, x, y, width, height);            }            imgRock.src = "images/rock.png";        }    }    // Resize the canvas    ScrollyCanvas.prototype.canvasInit = function() {        // Set the canvas dimensions        this.canvas.height = $(window).height();        this.canvas.width = $(window).width();        // Get the canvas context        this.ctx = this.canvas.getContext('2d');        // Don't blur our nice pixel art!        this.ctx.mozImageSmoothingEnabled = false;    }    return ScrollyCanvas;})();$(document).ready(function() {    var scrolly = new ScrollyCanvas("#scroller");});